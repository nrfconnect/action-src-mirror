name: 'Synchronize Source'
description: 'Checkout, pack, and upload source code to Artifactory'
inputs:
  git-ref:
    description: 'Branch, tag or SHA to checkout'
    required: true
  git-fetch-depth:
    description: 'Git fetch depth (0 = full history, 1 = shallow)'
    required: false
    default: '0'
  path:
    description: 'Directory to checkout sources into'
    required: false
    default: ''
  west-update-args:
    description: 'Arguments to pass to `west update`'
    required: false
    default: ''
  artifactory-url:
    description: 'Base URL of Artifactory'
    required: false
    default: 'https://eu.files.nordicsemi.com/artifactory'
  artifactory-path:
    description: 'Full Artifactory upload path'
    required: true
    default: ''
  artifactory-user:
    description: 'Artifactory username (pass as workflow secret)'
    required: true
  artifactory-pass:
    description: 'Artifactory password or API key (pass as workflow secret)'
    required: true

runs:
  using: composite
  steps:
    - name: Checkout sources
      uses: nrfconnect/action-checkout-west-update@main
      with:
        git-ref: ${{ inputs.git-ref }}
        git-fetch-depth: ${{ inputs.git-fetch-depth }}
        path: workspace/${{ inputs.path }}
        west-update-args: ${{ inputs.west-update-args }}

    - name: Prepare repository and generate archive
      shell: bash
      run: |
        cd "workspace/${{ inputs.path }}"
        
        # Configure git for better performance
        git config --global pack.windowMemory "128m"
        git config --global core.bigFileThreshold "20m"
        
        # Generate safe filename
        WEST_ARG_SAFE="$(echo "${{ inputs.west-update-args }}" | tr ' ' '_')"
        FILE="${GITHUB_REPOSITORY##*/}-${GITHUB_REF_NAME//\//-}${WEST_ARG_SAFE:+-$WEST_ARG_SAFE}"
        echo "FILE=${FILE}" >> $GITHUB_ENV

        # Remove unnecessary files
        west forall -c 'git gc --prune=now --aggressive'
    
    - name: Create tar archive
      shell: bash
      run: tar -C workspace -czvf "${FILE}.tar.gz" . > /dev/null

    - name: Temporarily store artifact
      uses: actions/upload-artifact@v4
      with:
        path: workspace
        name: ${{ env.FILE }}
        include-hidden-files: true
        compression-level: 9

    - name: End workflow if event is workflow_dispatch
      if: ${{ github.event_name == 'workflow_dispatch' }}
      shell: bash
      run: |
        echo "Workflow dispatched manually, ending workflow early."
        exit 0

    - name: Set up JFrog CLI
      uses: jfrog/setup-jfrog-cli@v4.5.11

    - name: Upload to Artifactory
      shell: bash
      run: |
        jfrog rt u ${FILE}.tar.gz ${{ inputs.artifactory-path }} \
          --url=${{ inputs.artifactory-url }} \
          --user=${{ inputs.artifactory-user }} \
          --password=${{ inputs.artifactory-pass }}
